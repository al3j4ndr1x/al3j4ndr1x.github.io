{"version":3,"sources":["webpack:///./src/components/landing-bio.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Container","Object","styled_base_browser_esm","target","name","styles","OuterContainer","Description","NameHeader","propTypes","siteTitle","PropTypes","string","defaultProps","LandingBio","core_browser_esm","gatsby_browser_entry","query","render","data","site","siteMetadata","title","_1846427949","IndexPage","layout","seo","keywords","landing_bio","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","children","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","Content","NavLink","Link","GitHubLink","HomeLink","SiteHeader","Header","to","href","Footer","Layout","react_default","a","Fragment","header","layout_Content","Date","getFullYear","_755544856","node","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-47616f4e174378d111a5.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst OuterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  height: 78vh;\r\n`\r\n\r\nconst Description = styled.p`\r\n  padding: 0;\r\n  margin-bottom: 1rem;\r\n  font-size: 1.4rem;\r\n`\r\n\r\nconst NameHeader = styled.h1`\r\n  font-size: 3.5rem;\r\n  margin-bottom: 0;\r\n`\r\n\r\nconst LandingBio = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query LandingSiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <OuterContainer>\r\n        <Container>\r\n          <NameHeader>{data.site.siteMetadata.title}</NameHeader>\r\n          <Description>Software Engineer</Description>\r\n        </Container>\r\n      </OuterContainer>\r\n    )}\r\n  />\r\n)\r\n\r\nNameHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nNameHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default LandingBio\r\n","import React from \"react\"\r\nimport {css} from \"@emotion/core\"\r\n\r\nimport LandingBio from \"../components/landing-bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n    <LandingBio />\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\r\nimport styled from \"@emotion/styled\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Content = styled.div`\r\n  max-width: 860px;\r\n  padding: 1rem 1.0875rem;\r\n  font-size: 1.2rem;\r\n`\r\n\r\nconst NavLink = styled(Link)`\r\n  color: black;\r\n  margin-left: 15px;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  position: relative;\r\n\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    transform: scaleX(0);\r\n    height: 2px;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    transform-origin: bottom right;\r\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\r\n  }\r\n\r\n  :hover::after {\r\n    transform: scaleX(1);\r\n    transform-origin: bottom left;\r\n  }\r\n`\r\n\r\nconst GitHubLink = styled.a`\r\n  color: black;\r\n  margin-left: 15px;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  position: relative;\r\n\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    transform: scaleX(0);\r\n    height: 2px;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    transform-origin: bottom right;\r\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\r\n  }\r\n\r\n  :hover::after {\r\n    transform: scaleX(1);\r\n    transform-origin: bottom left;\r\n  }\r\n`\r\n\r\nconst HomeLink = styled(NavLink)`\r\n  margin-left: 0;\r\n`\r\n\r\nconst SiteHeader = styled.header`\r\n  background: transparent;\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <SiteHeader>\r\n    <Content>\r\n      <p>\r\n        <HomeLink to=\"/\">{siteTitle}</HomeLink>\r\n        <NavLink to=\"/blog\">Blog</NavLink>\r\n        <GitHubLink href=\"https://github.com/al3j4ndr1x\">GitHub</GitHubLink>\r\n      </p>\r\n    </Content>\r\n  </SiteHeader>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Content = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 860px;\r\n  padding: 0 1.0875rem 1rem;\r\n  padding-top: 0;\r\n`\r\n\r\nconst GatsbyLink = styled.a`\r\n  margin-left: 5px;\r\n`\r\n\r\nconst Footer = styled.footer`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <Content>\r\n          <main>{children}</main>\r\n          <Footer>\r\n            © {new Date().getFullYear()}\r\n          </Footer>\r\n        </Content>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}