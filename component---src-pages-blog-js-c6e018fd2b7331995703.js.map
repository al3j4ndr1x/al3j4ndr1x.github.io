{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Content","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","ArticleDate","MarkerHeader","ReadingTime","IndexPage","_ref2","data","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","allMarkdownRemark","edges","map","_ref3","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","frontmatter","path","css","_ref","date","fields","readingTime","text","excerpt","query","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","styled_base_browser_esm","NavLink","Link","GitHubLink","HomeLink","SiteHeader","Header","siteTitle","core_browser_esm","href","defaultProps","Footer","Layout","gatsby_browser_entry","react_default","a","Fragment","header","site","siteMetadata","layout_Content","Date","getFullYear","_755544856","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-blog-js-c6e018fd2b7331995703.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { css } from \"@emotion/core\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst Content = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 860px;\r\n  padding: 1.45rem 1.0875rem;\r\n`\r\n\r\nconst ArticleDate = styled.h5`\r\n  display: inline;\r\n  color: #bbb;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst MarkerHeader = styled.h3`\r\n  display: inline;\r\n  border-radius: 1em 0 1em 0;\r\n  margin-bottom: 10px;\r\n  background-image: linear-gradient(\r\n    -100deg,\r\n    rgba(255, 250, 150, 0.15),\r\n    rgba(255, 250, 150, 0.8) 100%,\r\n    rgba(255, 250, 150, 0.25)\r\n  );\r\n`\r\n\r\nconst ReadingTime = styled.h5`\r\n  display: inline;\r\n  color: #bbb;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst IndexPage = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Blog\" />\r\n      <Content>\r\n        <h1>Blog</h1>\r\n        {data.allMarkdownRemark.edges.map(({ node }) => (\r\n          <div key={node.id}>\r\n            <Link\r\n              to={node.frontmatter.path}\r\n              css={css`\r\n                text-decoration: none;\r\n                color: inherit;\r\n              `}\r\n            >\r\n              <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\r\n              <div>\r\n                <ArticleDate>{node.frontmatter.date}</ArticleDate>\r\n                <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\r\n              </div>\r\n              <p>{node.excerpt}</p>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </Content>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const query = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            path\r\n          }\r\n          fields {\r\n            slug\r\n            readingTime {\r\n              text\r\n            }\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\r\nimport styled from \"@emotion/styled\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Content = styled.div`\r\n  max-width: 860px;\r\n  padding: 1rem 1.0875rem;\r\n  font-size: 1.2rem;\r\n`\r\n\r\nconst NavLink = styled(Link)`\r\n  color: black;\r\n  margin-left: 15px;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  position: relative;\r\n\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    transform: scaleX(0);\r\n    height: 2px;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    transform-origin: bottom right;\r\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\r\n  }\r\n\r\n  :hover::after {\r\n    transform: scaleX(1);\r\n    transform-origin: bottom left;\r\n  }\r\n`\r\n\r\nconst GitHubLink = styled.a`\r\n  color: black;\r\n  margin-left: 15px;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  position: relative;\r\n\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    transform: scaleX(0);\r\n    height: 2px;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    transform-origin: bottom right;\r\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\r\n  }\r\n\r\n  :hover::after {\r\n    transform: scaleX(1);\r\n    transform-origin: bottom left;\r\n  }\r\n`\r\n\r\nconst HomeLink = styled(NavLink)`\r\n  margin-left: 0;\r\n`\r\n\r\nconst SiteHeader = styled.header`\r\n  background: transparent;\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <SiteHeader>\r\n    <Content>\r\n      <p>\r\n        <HomeLink to=\"/\">{siteTitle}</HomeLink>\r\n        <NavLink to=\"/blog\">Blog</NavLink>\r\n        <GitHubLink href=\"https://github.com/al3j4ndr1x\">GitHub</GitHubLink>\r\n      </p>\r\n    </Content>\r\n  </SiteHeader>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Content = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 860px;\r\n  padding: 0 1.0875rem 1rem;\r\n  padding-top: 0;\r\n`\r\n\r\nconst GatsbyLink = styled.a`\r\n  margin-left: 5px;\r\n`\r\n\r\nconst Footer = styled.footer`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <Content>\r\n          <main>{children}</main>\r\n          <Footer>\r\n            © {new Date().getFullYear()}\r\n          </Footer>\r\n        </Content>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}